# Generated by Django 4.1 on 2023-10-01 03:34

import alltime11.validators
from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Contest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('contest_type', models.CharField(choices=[('head_to_head', 'Head To Head'), ('mega', 'Mega Contest')], max_length=15)),
                ('name', models.CharField(db_index=True, max_length=20)),
                ('prize', models.DecimalField(decimal_places=2, max_digits=10)),
                ('entry_fees', models.DecimalField(decimal_places=2, max_digits=10)),
                ('is_active', models.BooleanField()),
                ('no_of_teams', models.IntegerField()),
                ('discount_percentage', models.DecimalField(decimal_places=2, max_digits=4)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contests', to=settings.AUTH_USER_MODEL, validators=[alltime11.validators.validate_contest_creator])),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('uid', models.CharField(max_length=50, unique=True)),
                ('name', models.CharField(max_length=30)),
                ('short_name', models.CharField(max_length=20)),
                ('subtitle', models.CharField(max_length=20)),
                ('status', models.CharField(choices=[('not_started', 'Not Started'), ('started', 'Started'), ('completed', 'Completed')], default='not_started', max_length=20)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('association_id', models.CharField(db_index=True, max_length=25)),
                ('gender', models.CharField(max_length=10)),
                ('venue_name', models.CharField(max_length=20)),
                ('venue_city', models.CharField(max_length=20)),
                ('venue_country', models.CharField(max_length=2, null=True, validators=[alltime11.validators.validate_country_code])),
                ('play_status', models.CharField(choices=[('abandoned', 'Abandoned'), ('rain_delay', 'Rain Delay'), ('in_play', 'In Play'), ('result', 'Result')], default='abandoned', max_length=20)),
                ('is_date_confirmed', models.BooleanField(default=False)),
                ('is_venue_confirmed', models.BooleanField(default=False)),
                ('title', models.CharField(max_length=100)),
                ('match_format', models.CharField(choices=[('t20', 'Twenty 20'), ('oneday', 'One Day'), ('test', 'Test Match')], default='t20', max_length=20)),
                ('toss_info', models.JSONField()),
                ('target_info', models.JSONField()),
                ('team_a_score', models.JSONField()),
                ('team_b_score', models.JSONField()),
                ('win_type', models.CharField(choices=[('runs', 'runs'), ('wickets', 'wickets')], max_length=10, null=True)),
                ('win_message', models.CharField(max_length=30, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MatchPlayer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('is_playing', models.BooleanField(default=False)),
                ('is_captain', models.BooleanField(default=False)),
                ('is_keeper', models.BooleanField(default=False)),
                ('playing_order', models.IntegerField()),
                ('batting_stats', models.JSONField()),
                ('bowling_stats', models.JSONField()),
                ('fielding_stats', models.JSONField()),
                ('roles', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=10), null=True, size=5)),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='match_players', to='cricket.match')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('uid', models.CharField(max_length=50, unique=True)),
                ('name', models.CharField(max_length=30)),
                ('gender', models.CharField(choices=[('M', 'male'), ('F', 'female')], default='M', max_length=1)),
                ('nationality', models.CharField(max_length=2, null=True, validators=[alltime11.validators.validate_country_code])),
                ('date_of_birth', models.DateField(null=True)),
                ('seasonal_role', models.CharField(max_length=10)),
                ('batting_style', models.CharField(max_length=10)),
                ('bowling_style', models.CharField(max_length=10, null=True)),
                ('skills', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=10), null=True, size=5)),
                ('jersey_name', models.CharField(max_length=30)),
                ('legal_name', models.CharField(max_length=30)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('uid', models.CharField(max_length=20, unique=True)),
                ('name', models.CharField(max_length=30)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('uid', models.CharField(max_length=50, unique=True)),
                ('name', models.CharField(max_length=50)),
                ('short_name', models.CharField(max_length=20)),
                ('sport_type', models.CharField(choices=[('cricket', 'Cricket'), ('kabaddi', 'Kabaddi'), ('football', 'Football')], default='cricket', max_length=10)),
                ('association_id', models.CharField(db_index=True, max_length=25)),
                ('gender', models.CharField(max_length=10)),
                ('is_date_confirmed', models.BooleanField(default=False)),
                ('is_venue_confirmed', models.BooleanField(default=False)),
                ('start_date', models.DateTimeField()),
                ('last_scheduled_match_date', models.DateTimeField()),
                ('country', models.CharField(max_length=2, null=True, validators=[alltime11.validators.validate_country_code])),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserTeam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('players', models.JSONField()),
                ('batsman_count', models.IntegerField(validators=[alltime11.validators.validate_batsman_count])),
                ('bowler_count', models.IntegerField(validators=[alltime11.validators.validate_bowler_count])),
                ('all_rounder_count', models.IntegerField(validators=[alltime11.validators.validate_all_rounder_count])),
                ('captain', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='matches_as_captain', to='cricket.matchplayer')),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_teams', to='cricket.match')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teams', to=settings.AUTH_USER_MODEL)),
                ('vice_captain', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='matches_as_vice_captain', to='cricket.matchplayer')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserTeamContest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('contest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cricket.contest')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('user_team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cricket.userteam')),
            ],
        ),
        migrations.AddField(
            model_name='matchplayer',
            name='player',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cricket.player'),
        ),
        migrations.AddField(
            model_name='matchplayer',
            name='team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_players', to='cricket.team'),
        ),
        migrations.AddField(
            model_name='match',
            name='first_batting',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='first_bat_matches', to='cricket.team'),
        ),
        migrations.AddField(
            model_name='match',
            name='pom',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pom_matches', to='cricket.player'),
        ),
        migrations.AddField(
            model_name='match',
            name='team_a',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='a_matches', to='cricket.team'),
        ),
        migrations.AddField(
            model_name='match',
            name='team_b',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='b_matches', to='cricket.team'),
        ),
        migrations.AddField(
            model_name='match',
            name='tournament',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cricket.tournament'),
        ),
        migrations.AddField(
            model_name='match',
            name='winner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='won_matches', to='cricket.team'),
        ),
        migrations.AddField(
            model_name='contest',
            name='match',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contests', to='cricket.match'),
        ),
        migrations.AddField(
            model_name='contest',
            name='tournament',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contests', to='cricket.tournament'),
        ),
        migrations.AddConstraint(
            model_name='userteamcontest',
            constraint=models.UniqueConstraint(fields=('user', 'contest'), name='unique_user_contest'),
        ),
        migrations.AddConstraint(
            model_name='contest',
            constraint=models.UniqueConstraint(fields=('match', 'name'), name='unique_contest_name_match'),
        ),
    ]
